<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebAPITest</name>
    </assembly>
    <members>
        <member name="M:WebAPITest.Controllers.ClassController.GetAllClasses">
            <summary>Get all classes</summary>
            <remarks>GET request that retrieves all classes.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.ClassController.GetClassByDeptAndNumber(System.Int32,System.Int32)">
            <summary>Get class by class number and department id</summary>
            <remarks>GET request that retrieves the class with specified class number and department id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.ClassController.GetClassAndDepartmentTables">
            <summary>Get classes joined with department</summary>
            <remarks>GET request that retrieves the class with department name.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.ClassController.DeleteClassByNameAndNumber(System.Int32,System.Int32)">
            <summary>Delete class by class number</summary>
            <remarks>DELETE request that deletes the class with specified class number and department id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.ClassController.InsertClass(WebAPITest.Models.ClassDTO)">
            <summary>Create a new class</summary>
            <remarks>POST request that creates a new class with the inputted information.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.ClassController.UpdateClass(WebAPITest.Models.ClassDTO,System.Int32,System.Int32)">
            <summary>Update class by class number and department id</summary>
            <remarks>PUT request that updates the class with specified class number and department id to be set to the new inputted values.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.DepartmentController.GetAllDepartments">
            <summary>Get all departments</summary>
            <remarks>GET request that retrieves all departments.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.DepartmentController.GetDepartmentByName(System.Int32)">
            <summary>Get department by department id</summary>
            <remarks>GET request that retrieves the department with specified department id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.DepartmentController.DeleteDepartmentByName(System.Int32)">
            <summary>Delete department by department id</summary>
            <remarks>DELETE request that deletes the department with specified department id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.DepartmentController.InsertDepartment(System.String)">
            <summary>Create a new department</summary>
            <remarks>POST request that creates a new department with the inputted information. Returns the auto-generated department id for the newly added department.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.DepartmentController.UpdateDepartment(System.Int32,WebAPITest.Models.DepartmentDTO)">
            <summary>Update department by department id</summary>
            <remarks>PUT request that updates the department with specified department id to be set to the new inputted values.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PlanController.GetAllPlans">
            <summary>Get all plans</summary>
            <remarks>GET request that retrieves all plans.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PlanController.GetPlanByPlanId(System.Int32)">
            <summary>Get plan by plan id</summary>
            <remarks>GET request that retrieves the plan with specified plan id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PlanController.DeletePlanById(System.Int32)">
            <summary>Delete plan by plan id</summary>
            <remarks>DELETE request that deletes the plan with specified plan id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PlanController.InsertPlan(WebAPITest.Models.PlanInsertDTO)">
            <summary>Create a new plan</summary>
            <remarks>POST request that creates a new plan with the inputted information.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PlanController.UpdatePlan(WebAPITest.Models.PlanDTO,System.Int32)">
            <summary>Update plan by plan id</summary>
            <remarks>PUT request that updates the plan with specified plan number to be set to the new inputted values.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.GetAllClassPreferences">
            <summary>Get all class preferences for all professors</summary>
            <remarks>GET request that retrieves all class preferences for all professors. Only accessible by an admin.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.GetClassesCanTeach(System.Int32)">
            <summary>Get all classes and whether a professor can or cannot teach them</summary>
            <remarks>GET request that retrieves all classes and whether the indicated professor can or cannot teach them. A user can only access their own preferences.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.GetClassesPreferToTeach(System.Int32)">
            <summary>Get all classes and whether a professor prefers to teach them</summary>
            <remarks>GET request that retrieves all classes and whether the indicated professor prefers to teach them. A user can only access their own preferences.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.SaveCanTeachPreference(System.Collections.Generic.List{WebAPITest.Models.ClassesCanTeachInsertDTO},System.Int32)">
            <summary>Save professor preferences for what classes they can and cannot teach</summary>
            <remarks>POST request that saves professor preferences for what classes they can and cannot teach. If the preference already exists,
            it is updated with the inputted information. If it does not exist, it is added to the table. Request takes in a list of class preference objects.
            A user can only access their own preferences.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.AddPreferToTeachPreference(System.Collections.Generic.List{WebAPITest.Models.ClassesPreferToTeachInsertDTO},System.Int32)">
            <summary>Save professor preferences for what classes they prefer to teach</summary>
            <remarks>POST request that saves professor preferences for what classes they prefer to teach. If the preference already exists,
            it is updated with the inputted information. If it does not exist, it is added to the table. Request takes in a list of class preference objects.
            A user can only access their own preferences.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.DeleteClassPreferences(System.Int32)">
            <summary>Delete all class preferences for a professor</summary>
            <remarks>DELETE request that removes all class preferences for a professor with specified id. A user can only access their own preferences.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.GetDayOfWeekPreferences(System.Int32)">
            <summary>Get the days of the week a professor prefers to teach</summary>
            <remarks>GET request that retrieves the days of the week and whether the indicated professor prefers to teach then.
            A user can only access their own preferences.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.SaveDayOfWeekPreferences(WebAPITest.Models.DayOfWeekPreferenceDTO,System.Int32)">
            <summary>Saves the days of the week a professor prefers to teach</summary>
            <remarks>POST request that saves the days of the week the indicated professor prefers to teach. If the preference already exists,
            it is updated with the inputted information. If it does not exist, it is added to the table. A user can only access their own preferences.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.DeleteDayOfWeekPreferences(System.Int32)">
            <summary>Delete all day of week preferences for a professor</summary>
            <remarks>DELETE request that removes all day of week preferences for a professor with specified id. A user can only access their own preferences.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.GetTimeOfDayPreferences(System.Int32)">
            <summary>Get the times of the day a professor prefers to teach</summary>
            <remarks>GET request that retrieves the times of the day and whether the indicated professor prefers to teach then. A user can only access their own preferences.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.SaveTimeOfDayPreferences(WebAPITest.Models.TimeOfDayPreferenceDTO,System.Int32)">
            <summary>Saves the times of the day a professor prefers to teach</summary>
            <remarks>POST request that saves the times of the day the indicated professor prefers to teach. If the preference already exists,
            it is updated with the inputted information. If it does not exist, it is added to the table. A user can only access their own preferences.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.DeleteTimeOfDayPreferences(System.Int32)">
            <summary>Delete all time of day preferences for a professor</summary>
            <remarks>DELETE request that removes all time of day preferences for a professor with specified id. A user can only access their own preferences.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.GetTimeSlotPreferences(System.Int32)">
            <summary>Get all time slots and whether a professor can or cannot teach then</summary>
            <remarks>GET request that retrieves all the times slots and whether the indicated professor can or cannot teach then. A user can only access their own preferences.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.SaveTimeSlotPreference(System.Collections.Generic.List{WebAPITest.Models.TimeSlotPreferenceInsert},System.Int32)">
            <summary>Save professor preferences for what time slots they can and cannot teach</summary>
            <remarks>POST request that saves professor preferences for what time slots they can and cannot teach. If the preference already exists,
            it is updated with the inputted information. If it does not exist, it is added to the table. Request takes in a list of time slot preference objects.
            A user can only access their own preferences.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.PreferenceController.DeleteTimeSlotPreferences(System.Int32)">
            <summary>Delete all time slot preferences for a professor</summary>
            <remarks>DELETE request that removes all time slot preferences for a professor with specified id. A user can only access their own preferences.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.ProfessorController.GetAllProfessors">
            <summary>Get all professsors</summary>
            <remarks>GET request that retrieves all professors.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.ProfessorController.GetProfessorById(System.String)">
            <summary>Get professor by professor id</summary>
            <remarks>GET request that retrieves the professor with specified professor id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.ProfessorController.DeleteProfessorById(System.String)">
            <summary>Delete professor by professor id</summary>
            <remarks>DELETE request that deletes the professor with specified professor id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.ProfessorController.InsertProfessor(WebAPITest.Models.ProfessorInsertDTO)">
            <summary>Create a new professor</summary>
            <remarks>POST request that creates a new professor with inputted information. Returns all fields for the newly created professor
            including the auto-generated professor id and randomly created password for the new user.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.ProfessorController.UpdateProfessor(WebAPITest.Models.ProfessorDTO,System.Int32)">
            <summary>Update professor by professor id</summary>
            <remarks>PUT request that updates the professor with specified professor id to be set to the new inputted values.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.RoomController.GetAllRooms">
            <summary>Get all rooms</summary>
            <remarks>GET request that retrieves all rooms.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.RoomController.GetProfessorById(System.String)">
            <summary>Get room by room id</summary>
            <remarks>GET request that retrieves the room with specified room id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.RoomController.DeleteRoomById(System.String)">
            <summary>Delete room by room id</summary>
            <remarks>DELETE request that deletes the room with specified room id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.RoomController.InsertRoom(WebAPITest.Models.RoomInsertDTO)">
            <summary>Create a new room</summary>
            <remarks>POST request that creates a new room with inputted values. Returns the auto-generated room id for the newly added room.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.RoomController.UpdateRoom(WebAPITest.Models.RoomDTO,System.Int32)">
            <summary>Update room by room id</summary>
            <remarks>PUT request that updates the room with specified room id to be set to the new inputted values.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.SectionController.GetAllSections">
            <summary>Get all sections</summary>
            <remarks>GET request that retrieves all sections.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.SectionController.GetSectionById(System.String)">
            <summary>Get sections by section id</summary>
            <remarks>GET request that retrieves the sections with specified section id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.SectionController.GetSectionsByPlanId(System.String)">
            <summary>Get sections by plan id</summary>
            <remarks>GET request that retrieves the sections with specified plan id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.SectionController.DeleteSectionById(System.String)">
            <summary>Delete sections by section id</summary>
            <remarks>DELETE request that deletes the section with specified section id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.SectionController.DeleteSectionByPlanId(System.String)">
            <summary>Delete sections by plan id</summary>
            <remarks>DELETE request that deletes the section with specified plan id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.SectionController.InsertSection(WebAPITest.Models.SectionInsertDTO)">
            <summary>Create a new section</summary>
            <remarks>POST request that creates a new section with inputted information.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.SectionController.InsertSections(System.Collections.Generic.List{WebAPITest.Models.SectionInsertDTO})">
            <summary>Create new sections</summary>
            <remarks>POST request that creates multiple sections with inputted list of information.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.SectionController.DeletePlanSectionsInsertList(System.Collections.Generic.List{WebAPITest.Models.SectionInsertDTO},System.String)">
            <summary>Delete previous sections and insert a new list based on plan id </summary>
            <remarks>POST request that deletes sections based on plan id and creates multiple sections with inputted list of information.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.SectionController.UpdateSection(WebAPITest.Models.SectionInsertDTO,System.Int32)">
            <summary>Update sections by section id</summary>
            <remarks>PUT request that updates the section with specified section id to be set to the new inputted values.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.TimeSlotController.GetAllTimeSlots">
            <summary>Get all time slots</summary>
            <remarks>GET request that retrieves all time slots.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.TimeSlotController.GetTimeSlotById(System.Int32)">
            <summary>Get time slot by time_slot_id</summary>
            <remarks>GET request that retrieves the time slot with specified time slot id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.TimeSlotController.DeleteTimeSlotById(System.Int32)">
            <summary>Delete time slot by time slot id</summary>
            <remarks>DELETE request that deletes the time slot with specified time slot id.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.TimeSlotController.InsertTimeSlot(WebAPITest.Models.TimeSlotInsertDTO)">
            <summary>Create a new time slot</summary>
            <remarks>POST request that creates a new time slot with the inputted information.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.UsersController.CreateAdmin(WebAPITest.Models.AuthenticateRequest)">
            <summary>Create a new admin user</summary>
            <remarks>POST request that creates a new admin user with inputted information. Only an existing admin can add another admin user.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.UsersController.AuthenticateAdmin(WebAPITest.Models.AuthenticateRequest)">
            <summary>Authenticate an admin user</summary>
            <remarks>POST request that authenticates an admin user with inputted information. If valid, returns a token to be used to authenticate future requests.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.UsersController.AuthenticateUser(WebAPITest.Models.AuthenticateRequest)">
            <summary>Authenticate a user (professor)</summary>
            <remarks>POST request that authenticates a user with inputted information. If valid, returns a token to be used to authenticate future requests.</remarks>
        </member>
        <member name="M:WebAPITest.Controllers.UsersController.ChangePassword(System.String)">
            <summary>Change a user or admin's password</summary>
            <remarks>POST request that changes the user's password. User or admin must be logged in and send a valid token to be authorized for this endpoint.</remarks>
        </member>
    </members>
</doc>
